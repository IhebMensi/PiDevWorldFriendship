<?php
/**
 * Created by PhpStorm.
 * User: Marwa
 * Date: 16/02/2019
 * Time: 20:56
 */

namespace Esprit\ApiBundle\Repository;


use Doctrine\ORM\EntityRepository;

/**
 * EvenementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EvenementRepository extends \Doctrine\ORM\EntityRepository
{
    public function findByevent($idevenement){
        $query = $this->createQueryBuilder('m')
            ->where('m.idevenement = :param')
            ->setParameter('param',$idevenement);
        return $query->getQuery()->getResult();
    }

    public function findBycal($idcal){
        $query = $this->createQueryBuilder('m')
            ->where('m.idcal = :param')
            ->setParameter('param',$idcal);
        return $query->getQuery()->getResult();
    }


    public function findnomeveParametre($nomevenement){
        $query = $this->getEntityManager()
            ->createQuery("SELECT p FROM PiDevGestionEvenementEvenementBundle:Evenement p where p.nomevenement =:nomevenement ")
            ->setParameter('nomevenement',$nomevenement);
        return $query->getResult();
    }

    public function findContenuParametre($nomevenement){
        $query = $this->getEntityManager()
            ->createQuery("SELECT p FROM PiDevGestionEvenementEvenementBundle:Evenement p where p.nomevenement LIKE :nomevenement")
            ->setParameter('nomevenement','%'.$nomevenement.'%');
        return $query->getResult();
    }
    public function findLieuParametre($pays,$region,$nomcategorie)
    {
        $query=$this->getEntityManager()
            ->createQuery("SELECT p FROM PiDevGestionEvenementEvenementBundle:Evenement p  JOIN  p.categorie m  
where (m.nomcategorie =:nomcategorie AND  p.pays =:pays AND p.region =:region  ) OR (m.nomcategorie =:nomcategorie AND  p.pays =:pays   )
 OR ( p.pays =:pays AND p.region =:region  ) 
 
 


" )
            ->setParameter('pays',$pays)->setParameter('region',$region)->setParameter('nomcategorie',$nomcategorie);

        return $query->getResult();
    }
    public function findCategorieParametre($nomcategorie)
    {
        $query=$this->getEntityManager()
            ->createQuery("SELECT p FROM PiDevGestionEvenementEvenementBundle:Evenement p  JOIN p.categorie m  where m.nomcategorie =:nomcategorie" )
            ->setParameter('nomcategorie',$nomcategorie);

        return $query->getResult();
    }


    public function findreParametre($user,$event,$reaction)
    {
        $query=$this->getEntityManager()
            ->createQuery("SELECT p FROM PiDevGestionEvenementEvenementBundle:ReactionEvenement p   where p.user =:user AND p.event =:event AND p.reaction =:reaction" )
            ->setParameter('user',$user)->setParameter('event',$event)->setParameter('reaction',$reaction);

        return $query->getResult();
    }

}